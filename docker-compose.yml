services:
  searcher:
    build:
      context: ./
      dockerfile: ./song-searcher.dockerfile
    container_name: searcher
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      PORT: '8080'
      DSN: 'host=postgres port=5432 user=${POSTGRES_USER:-postgres} password=${POSTGRES_PASSWORD:-password} dbname=${POSTGRES_DB:-songs} sslmode=disable timezone=UTC connect_timeout=5'

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - searcher
    restart: always

  postgres:
    image: 'postgres:17.0'
    container_name: postgresdb
    ports:
      - '5432:5432'
    restart: always
    environment:
      POSTGRES_USER: '${POSTGRES_USER:-postgres}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-password}'
      POSTGRES_DB: '${POSTGRES_DB:-songs}'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: